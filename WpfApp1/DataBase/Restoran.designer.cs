#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp1.DataBase
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Restoran")]
	public partial class RestoranDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertAdres(Adres instance);
    partial void UpdateAdres(Adres instance);
    partial void DeleteAdres(Adres instance);
    partial void InsertZacaz_bluda(Zacaz_bluda instance);
    partial void UpdateZacaz_bluda(Zacaz_bluda instance);
    partial void DeleteZacaz_bluda(Zacaz_bluda instance);
    partial void InsertBluda(Bluda instance);
    partial void UpdateBluda(Bluda instance);
    partial void DeleteBluda(Bluda instance);
    partial void InsertKat_bluda(Kat_bluda instance);
    partial void UpdateKat_bluda(Kat_bluda instance);
    partial void DeleteKat_bluda(Kat_bluda instance);
    partial void InsertKategoria(Kategoria instance);
    partial void UpdateKategoria(Kategoria instance);
    partial void DeleteKategoria(Kategoria instance);
    partial void InsertKlient(Klient instance);
    partial void UpdateKlient(Klient instance);
    partial void DeleteKlient(Klient instance);
    partial void InsertProdykt(Prodykt instance);
    partial void UpdateProdykt(Prodykt instance);
    partial void DeleteProdykt(Prodykt instance);
    partial void InsertSostav(Sostav instance);
    partial void UpdateSostav(Sostav instance);
    partial void DeleteSostav(Sostav instance);
    partial void InsertZacaz(Zacaz instance);
    partial void UpdateZacaz(Zacaz instance);
    partial void DeleteZacaz(Zacaz instance);
    #endregion
		
		public RestoranDataContext() : 
				base(global::WpfApp1.Properties.Settings.Default.RestoranConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RestoranDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RestoranDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RestoranDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RestoranDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Adres> Adres
		{
			get
			{
				return this.GetTable<Adres>();
			}
		}
		
		public System.Data.Linq.Table<Zacaz_bluda> Zacaz_bluda
		{
			get
			{
				return this.GetTable<Zacaz_bluda>();
			}
		}
		
		public System.Data.Linq.Table<Bluda> Bluda
		{
			get
			{
				return this.GetTable<Bluda>();
			}
		}
		
		public System.Data.Linq.Table<Kat_bluda> Kat_bluda
		{
			get
			{
				return this.GetTable<Kat_bluda>();
			}
		}
		
		public System.Data.Linq.Table<Kategoria> Kategoria
		{
			get
			{
				return this.GetTable<Kategoria>();
			}
		}
		
		public System.Data.Linq.Table<Klient> Klient
		{
			get
			{
				return this.GetTable<Klient>();
			}
		}
		
		public System.Data.Linq.Table<Prodykt> Prodykt
		{
			get
			{
				return this.GetTable<Prodykt>();
			}
		}
		
		public System.Data.Linq.Table<Sostav> Sostav
		{
			get
			{
				return this.GetTable<Sostav>();
			}
		}
		
		public System.Data.Linq.Table<Zacaz> Zacaz
		{
			get
			{
				return this.GetTable<Zacaz>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Check_users", IsComposable=true)]
		public System.Nullable<int> Check_users([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string log, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string pas)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), log, pas).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Add_User")]
		public int Add_User([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(250)")] string adr, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string fam, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nam, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string otc, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(11)")] string tel, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string log, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string pas)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), adr, fam, nam, otc, tel, log, pas);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Adres")]
	public partial class Adres : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Adres1;
		
		private EntitySet<Klient> _Klient;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAdres1Changing(string value);
    partial void OnAdres1Changed();
    #endregion
		
		public Adres()
		{
			this._Klient = new EntitySet<Klient>(new Action<Klient>(this.attach_Klient), new Action<Klient>(this.detach_Klient));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Adres", Storage="_Adres1", DbType="NVarChar(250)")]
		public string Adres1
		{
			get
			{
				return this._Adres1;
			}
			set
			{
				if ((this._Adres1 != value))
				{
					this.OnAdres1Changing(value);
					this.SendPropertyChanging();
					this._Adres1 = value;
					this.SendPropertyChanged("Adres1");
					this.OnAdres1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adres_Klient", Storage="_Klient", ThisKey="id", OtherKey="Adres")]
		public EntitySet<Klient> Klient
		{
			get
			{
				return this._Klient;
			}
			set
			{
				this._Klient.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Klient(Klient entity)
		{
			this.SendPropertyChanging();
			entity.Adres1 = this;
		}
		
		private void detach_Klient(Klient entity)
		{
			this.SendPropertyChanging();
			entity.Adres1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zacaz_bluda")]
	public partial class Zacaz_bluda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _id_bluda;
		
		private System.Nullable<int> _id_zakaz;
		
		private EntityRef<Bluda> _Bluda;
		
		private EntityRef<Zacaz> _Zacaz;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_bludaChanging(System.Nullable<int> value);
    partial void Onid_bludaChanged();
    partial void Onid_zakazChanging(System.Nullable<int> value);
    partial void Onid_zakazChanged();
    #endregion
		
		public Zacaz_bluda()
		{
			this._Bluda = default(EntityRef<Bluda>);
			this._Zacaz = default(EntityRef<Zacaz>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_bluda", DbType="Int")]
		public System.Nullable<int> id_bluda
		{
			get
			{
				return this._id_bluda;
			}
			set
			{
				if ((this._id_bluda != value))
				{
					if (this._Bluda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_bludaChanging(value);
					this.SendPropertyChanging();
					this._id_bluda = value;
					this.SendPropertyChanged("id_bluda");
					this.Onid_bludaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zakaz", DbType="Int")]
		public System.Nullable<int> id_zakaz
		{
			get
			{
				return this._id_zakaz;
			}
			set
			{
				if ((this._id_zakaz != value))
				{
					if (this._Zacaz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zakazChanging(value);
					this.SendPropertyChanging();
					this._id_zakaz = value;
					this.SendPropertyChanged("id_zakaz");
					this.Onid_zakazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bluda_Zacaz_bluda", Storage="_Bluda", ThisKey="id_bluda", OtherKey="id", IsForeignKey=true)]
		public Bluda Bluda
		{
			get
			{
				return this._Bluda.Entity;
			}
			set
			{
				Bluda previousValue = this._Bluda.Entity;
				if (((previousValue != value) 
							|| (this._Bluda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bluda.Entity = null;
						previousValue.Zacaz_bluda.Remove(this);
					}
					this._Bluda.Entity = value;
					if ((value != null))
					{
						value.Zacaz_bluda.Add(this);
						this._id_bluda = value.id;
					}
					else
					{
						this._id_bluda = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bluda");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zacaz_Zacaz_bluda", Storage="_Zacaz", ThisKey="id_zakaz", OtherKey="id", IsForeignKey=true)]
		public Zacaz Zacaz
		{
			get
			{
				return this._Zacaz.Entity;
			}
			set
			{
				Zacaz previousValue = this._Zacaz.Entity;
				if (((previousValue != value) 
							|| (this._Zacaz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zacaz.Entity = null;
						previousValue.Zacaz_bluda.Remove(this);
					}
					this._Zacaz.Entity = value;
					if ((value != null))
					{
						value.Zacaz_bluda.Add(this);
						this._id_zakaz = value.id;
					}
					else
					{
						this._id_zakaz = default(Nullable<int>);
					}
					this.SendPropertyChanged("Zacaz");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bluda")]
	public partial class Bluda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Data.Linq.Binary _Image;
		
		private string _nazv;
		
		private System.Nullable<decimal> _cena;
		
		private System.Nullable<decimal> _discont;
		
		private EntitySet<Zacaz_bluda> _Zacaz_bluda;
		
		private EntitySet<Kat_bluda> _Kat_bluda;
		
		private EntitySet<Sostav> _Sostav;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnnazvChanging(string value);
    partial void OnnazvChanged();
    partial void OncenaChanging(System.Nullable<decimal> value);
    partial void OncenaChanged();
    partial void OndiscontChanging(System.Nullable<decimal> value);
    partial void OndiscontChanged();
    #endregion
		
		public Bluda()
		{
			this._Zacaz_bluda = new EntitySet<Zacaz_bluda>(new Action<Zacaz_bluda>(this.attach_Zacaz_bluda), new Action<Zacaz_bluda>(this.detach_Zacaz_bluda));
			this._Kat_bluda = new EntitySet<Kat_bluda>(new Action<Kat_bluda>(this.attach_Kat_bluda), new Action<Kat_bluda>(this.detach_Kat_bluda));
			this._Sostav = new EntitySet<Sostav>(new Action<Sostav>(this.attach_Sostav), new Action<Sostav>(this.detach_Sostav));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazv", DbType="NVarChar(100)")]
		public string nazv
		{
			get
			{
				return this._nazv;
			}
			set
			{
				if ((this._nazv != value))
				{
					this.OnnazvChanging(value);
					this.SendPropertyChanging();
					this._nazv = value;
					this.SendPropertyChanged("nazv");
					this.OnnazvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cena", DbType="Money")]
		public System.Nullable<decimal> cena
		{
			get
			{
				return this._cena;
			}
			set
			{
				if ((this._cena != value))
				{
					this.OncenaChanging(value);
					this.SendPropertyChanging();
					this._cena = value;
					this.SendPropertyChanged("cena");
					this.OncenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discont", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> discont
		{
			get
			{
				return this._discont;
			}
			set
			{
				if ((this._discont != value))
				{
					this.OndiscontChanging(value);
					this.SendPropertyChanging();
					this._discont = value;
					this.SendPropertyChanged("discont");
					this.OndiscontChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bluda_Zacaz_bluda", Storage="_Zacaz_bluda", ThisKey="id", OtherKey="id_bluda")]
		public EntitySet<Zacaz_bluda> Zacaz_bluda
		{
			get
			{
				return this._Zacaz_bluda;
			}
			set
			{
				this._Zacaz_bluda.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bluda_Kat_bluda", Storage="_Kat_bluda", ThisKey="id", OtherKey="id_bluda")]
		public EntitySet<Kat_bluda> Kat_bluda
		{
			get
			{
				return this._Kat_bluda;
			}
			set
			{
				this._Kat_bluda.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bluda_Sostav", Storage="_Sostav", ThisKey="id", OtherKey="id_bluda")]
		public EntitySet<Sostav> Sostav
		{
			get
			{
				return this._Sostav;
			}
			set
			{
				this._Sostav.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zacaz_bluda(Zacaz_bluda entity)
		{
			this.SendPropertyChanging();
			entity.Bluda = this;
		}
		
		private void detach_Zacaz_bluda(Zacaz_bluda entity)
		{
			this.SendPropertyChanging();
			entity.Bluda = null;
		}
		
		private void attach_Kat_bluda(Kat_bluda entity)
		{
			this.SendPropertyChanging();
			entity.Bluda = this;
		}
		
		private void detach_Kat_bluda(Kat_bluda entity)
		{
			this.SendPropertyChanging();
			entity.Bluda = null;
		}
		
		private void attach_Sostav(Sostav entity)
		{
			this.SendPropertyChanging();
			entity.Bluda = this;
		}
		
		private void detach_Sostav(Sostav entity)
		{
			this.SendPropertyChanging();
			entity.Bluda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kat_bluda")]
	public partial class Kat_bluda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _id_kat;
		
		private System.Nullable<int> _id_bluda;
		
		private EntityRef<Bluda> _Bluda;
		
		private EntityRef<Kategoria> _Kategoria;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_katChanging(System.Nullable<int> value);
    partial void Onid_katChanged();
    partial void Onid_bludaChanging(System.Nullable<int> value);
    partial void Onid_bludaChanged();
    #endregion
		
		public Kat_bluda()
		{
			this._Bluda = default(EntityRef<Bluda>);
			this._Kategoria = default(EntityRef<Kategoria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_kat", DbType="Int")]
		public System.Nullable<int> id_kat
		{
			get
			{
				return this._id_kat;
			}
			set
			{
				if ((this._id_kat != value))
				{
					if (this._Kategoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_katChanging(value);
					this.SendPropertyChanging();
					this._id_kat = value;
					this.SendPropertyChanged("id_kat");
					this.Onid_katChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_bluda", DbType="Int")]
		public System.Nullable<int> id_bluda
		{
			get
			{
				return this._id_bluda;
			}
			set
			{
				if ((this._id_bluda != value))
				{
					if (this._Bluda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_bludaChanging(value);
					this.SendPropertyChanging();
					this._id_bluda = value;
					this.SendPropertyChanged("id_bluda");
					this.Onid_bludaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bluda_Kat_bluda", Storage="_Bluda", ThisKey="id_bluda", OtherKey="id", IsForeignKey=true)]
		public Bluda Bluda
		{
			get
			{
				return this._Bluda.Entity;
			}
			set
			{
				Bluda previousValue = this._Bluda.Entity;
				if (((previousValue != value) 
							|| (this._Bluda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bluda.Entity = null;
						previousValue.Kat_bluda.Remove(this);
					}
					this._Bluda.Entity = value;
					if ((value != null))
					{
						value.Kat_bluda.Add(this);
						this._id_bluda = value.id;
					}
					else
					{
						this._id_bluda = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bluda");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategoria_Kat_bluda", Storage="_Kategoria", ThisKey="id_kat", OtherKey="id", IsForeignKey=true)]
		public Kategoria Kategoria
		{
			get
			{
				return this._Kategoria.Entity;
			}
			set
			{
				Kategoria previousValue = this._Kategoria.Entity;
				if (((previousValue != value) 
							|| (this._Kategoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategoria.Entity = null;
						previousValue.Kat_bluda.Remove(this);
					}
					this._Kategoria.Entity = value;
					if ((value != null))
					{
						value.Kat_bluda.Add(this);
						this._id_kat = value.id;
					}
					else
					{
						this._id_kat = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kategoria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kategoria")]
	public partial class Kategoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nazv_kat;
		
		private EntitySet<Kat_bluda> _Kat_bluda;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onnazv_katChanging(string value);
    partial void Onnazv_katChanged();
    #endregion
		
		public Kategoria()
		{
			this._Kat_bluda = new EntitySet<Kat_bluda>(new Action<Kat_bluda>(this.attach_Kat_bluda), new Action<Kat_bluda>(this.detach_Kat_bluda));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[nazv kat]", Storage="_nazv_kat", DbType="NVarChar(100)")]
		public string nazv_kat
		{
			get
			{
				return this._nazv_kat;
			}
			set
			{
				if ((this._nazv_kat != value))
				{
					this.Onnazv_katChanging(value);
					this.SendPropertyChanging();
					this._nazv_kat = value;
					this.SendPropertyChanged("nazv_kat");
					this.Onnazv_katChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategoria_Kat_bluda", Storage="_Kat_bluda", ThisKey="id", OtherKey="id_kat")]
		public EntitySet<Kat_bluda> Kat_bluda
		{
			get
			{
				return this._Kat_bluda;
			}
			set
			{
				this._Kat_bluda.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kat_bluda(Kat_bluda entity)
		{
			this.SendPropertyChanging();
			entity.Kategoria = this;
		}
		
		private void detach_Kat_bluda(Kat_bluda entity)
		{
			this.SendPropertyChanging();
			entity.Kategoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Klient")]
	public partial class Klient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Last_Name;
		
		private string _Name;
		
		private string _Otchestvo;
		
		private System.Nullable<int> _Adres;
		
		private string _Telephone;
		
		private string _Login;
		
		private string _Password;
		
		private System.Nullable<char> _type;
		
		private EntitySet<Zacaz> _Zacaz;
		
		private EntityRef<Adres> _Adres1;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOtchestvoChanging(string value);
    partial void OnOtchestvoChanged();
    partial void OnAdresChanging(System.Nullable<int> value);
    partial void OnAdresChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OntypeChanging(System.Nullable<char> value);
    partial void OntypeChanged();
    #endregion
		
		public Klient()
		{
			this._Zacaz = new EntitySet<Zacaz>(new Action<Zacaz>(this.attach_Zacaz), new Action<Zacaz>(this.detach_Zacaz));
			this._Adres1 = default(EntityRef<Adres>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Last Name]", Storage="_Last_Name", DbType="NVarChar(50)")]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Otchestvo", DbType="NVarChar(50)")]
		public string Otchestvo
		{
			get
			{
				return this._Otchestvo;
			}
			set
			{
				if ((this._Otchestvo != value))
				{
					this.OnOtchestvoChanging(value);
					this.SendPropertyChanging();
					this._Otchestvo = value;
					this.SendPropertyChanged("Otchestvo");
					this.OnOtchestvoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="Int")]
		public System.Nullable<int> Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					if (this._Adres1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdresChanging(value);
					this.SendPropertyChanging();
					this._Adres = value;
					this.SendPropertyChanged("Adres");
					this.OnAdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="Char(11)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(50)")]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Char(1)")]
		public System.Nullable<char> type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klient_Zacaz", Storage="_Zacaz", ThisKey="Id", OtherKey="id_klient")]
		public EntitySet<Zacaz> Zacaz
		{
			get
			{
				return this._Zacaz;
			}
			set
			{
				this._Zacaz.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adres_Klient", Storage="_Adres1", ThisKey="Adres", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Adres Adres1
		{
			get
			{
				return this._Adres1.Entity;
			}
			set
			{
				Adres previousValue = this._Adres1.Entity;
				if (((previousValue != value) 
							|| (this._Adres1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adres1.Entity = null;
						previousValue.Klient.Remove(this);
					}
					this._Adres1.Entity = value;
					if ((value != null))
					{
						value.Klient.Add(this);
						this._Adres = value.id;
					}
					else
					{
						this._Adres = default(Nullable<int>);
					}
					this.SendPropertyChanged("Adres1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zacaz(Zacaz entity)
		{
			this.SendPropertyChanging();
			entity.Klient = this;
		}
		
		private void detach_Zacaz(Zacaz entity)
		{
			this.SendPropertyChanging();
			entity.Klient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prodykt")]
	public partial class Prodykt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Data.Linq.Binary _nazv;
		
		private EntitySet<Sostav> _Sostav;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnazvChanging(System.Data.Linq.Binary value);
    partial void OnnazvChanged();
    #endregion
		
		public Prodykt()
		{
			this._Sostav = new EntitySet<Sostav>(new Action<Sostav>(this.attach_Sostav), new Action<Sostav>(this.detach_Sostav));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazv", DbType="VarBinary(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary nazv
		{
			get
			{
				return this._nazv;
			}
			set
			{
				if ((this._nazv != value))
				{
					this.OnnazvChanging(value);
					this.SendPropertyChanging();
					this._nazv = value;
					this.SendPropertyChanged("nazv");
					this.OnnazvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prodykt_Sostav", Storage="_Sostav", ThisKey="id", OtherKey="id_Prodykt")]
		public EntitySet<Sostav> Sostav
		{
			get
			{
				return this._Sostav;
			}
			set
			{
				this._Sostav.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sostav(Sostav entity)
		{
			this.SendPropertyChanging();
			entity.Prodykt = this;
		}
		
		private void detach_Sostav(Sostav entity)
		{
			this.SendPropertyChanging();
			entity.Prodykt = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sostav")]
	public partial class Sostav : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _id_bluda;
		
		private System.Nullable<int> _id_Prodykt;
		
		private string _ves;
		
		private EntityRef<Bluda> _Bluda;
		
		private EntityRef<Prodykt> _Prodykt;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_bludaChanging(System.Nullable<int> value);
    partial void Onid_bludaChanged();
    partial void Onid_ProdyktChanging(System.Nullable<int> value);
    partial void Onid_ProdyktChanged();
    partial void OnvesChanging(string value);
    partial void OnvesChanged();
    #endregion
		
		public Sostav()
		{
			this._Bluda = default(EntityRef<Bluda>);
			this._Prodykt = default(EntityRef<Prodykt>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_bluda", DbType="Int")]
		public System.Nullable<int> id_bluda
		{
			get
			{
				return this._id_bluda;
			}
			set
			{
				if ((this._id_bluda != value))
				{
					if (this._Bluda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_bludaChanging(value);
					this.SendPropertyChanging();
					this._id_bluda = value;
					this.SendPropertyChanged("id_bluda");
					this.Onid_bludaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Prodykt", DbType="Int")]
		public System.Nullable<int> id_Prodykt
		{
			get
			{
				return this._id_Prodykt;
			}
			set
			{
				if ((this._id_Prodykt != value))
				{
					if (this._Prodykt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ProdyktChanging(value);
					this.SendPropertyChanging();
					this._id_Prodykt = value;
					this.SendPropertyChanged("id_Prodykt");
					this.Onid_ProdyktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ves", DbType="NVarChar(50)")]
		public string ves
		{
			get
			{
				return this._ves;
			}
			set
			{
				if ((this._ves != value))
				{
					this.OnvesChanging(value);
					this.SendPropertyChanging();
					this._ves = value;
					this.SendPropertyChanged("ves");
					this.OnvesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bluda_Sostav", Storage="_Bluda", ThisKey="id_bluda", OtherKey="id", IsForeignKey=true)]
		public Bluda Bluda
		{
			get
			{
				return this._Bluda.Entity;
			}
			set
			{
				Bluda previousValue = this._Bluda.Entity;
				if (((previousValue != value) 
							|| (this._Bluda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bluda.Entity = null;
						previousValue.Sostav.Remove(this);
					}
					this._Bluda.Entity = value;
					if ((value != null))
					{
						value.Sostav.Add(this);
						this._id_bluda = value.id;
					}
					else
					{
						this._id_bluda = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bluda");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prodykt_Sostav", Storage="_Prodykt", ThisKey="id_Prodykt", OtherKey="id", IsForeignKey=true)]
		public Prodykt Prodykt
		{
			get
			{
				return this._Prodykt.Entity;
			}
			set
			{
				Prodykt previousValue = this._Prodykt.Entity;
				if (((previousValue != value) 
							|| (this._Prodykt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prodykt.Entity = null;
						previousValue.Sostav.Remove(this);
					}
					this._Prodykt.Entity = value;
					if ((value != null))
					{
						value.Sostav.Add(this);
						this._id_Prodykt = value.id;
					}
					else
					{
						this._id_Prodykt = default(Nullable<int>);
					}
					this.SendPropertyChanged("Prodykt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zacaz")]
	public partial class Zacaz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _id_zacaz_bluda;
		
		private System.Nullable<int> _id_klient;
		
		private System.Nullable<System.DateTime> _data;
		
		private EntitySet<Zacaz_bluda> _Zacaz_bluda;
		
		private EntityRef<Klient> _Klient;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_zacaz_bludaChanging(System.Nullable<int> value);
    partial void Onid_zacaz_bludaChanged();
    partial void Onid_klientChanging(System.Nullable<int> value);
    partial void Onid_klientChanged();
    partial void OndataChanging(System.Nullable<System.DateTime> value);
    partial void OndataChanged();
    #endregion
		
		public Zacaz()
		{
			this._Zacaz_bluda = new EntitySet<Zacaz_bluda>(new Action<Zacaz_bluda>(this.attach_Zacaz_bluda), new Action<Zacaz_bluda>(this.detach_Zacaz_bluda));
			this._Klient = default(EntityRef<Klient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[id zacaz bluda]", Storage="_id_zacaz_bluda", DbType="Int")]
		public System.Nullable<int> id_zacaz_bluda
		{
			get
			{
				return this._id_zacaz_bluda;
			}
			set
			{
				if ((this._id_zacaz_bluda != value))
				{
					this.Onid_zacaz_bludaChanging(value);
					this.SendPropertyChanging();
					this._id_zacaz_bluda = value;
					this.SendPropertyChanged("id_zacaz_bluda");
					this.Onid_zacaz_bludaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[id klient]", Storage="_id_klient", DbType="Int")]
		public System.Nullable<int> id_klient
		{
			get
			{
				return this._id_klient;
			}
			set
			{
				if ((this._id_klient != value))
				{
					this.Onid_klientChanging(value);
					this.SendPropertyChanging();
					this._id_klient = value;
					this.SendPropertyChanged("id_klient");
					this.Onid_klientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="DateTime")]
		public System.Nullable<System.DateTime> data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zacaz_Zacaz_bluda", Storage="_Zacaz_bluda", ThisKey="id", OtherKey="id_zakaz")]
		public EntitySet<Zacaz_bluda> Zacaz_bluda
		{
			get
			{
				return this._Zacaz_bluda;
			}
			set
			{
				this._Zacaz_bluda.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klient_Zacaz", Storage="_Klient", ThisKey="id_klient", OtherKey="Id", IsForeignKey=true)]
		public Klient Klient
		{
			get
			{
				return this._Klient.Entity;
			}
			set
			{
				Klient previousValue = this._Klient.Entity;
				if (((previousValue != value) 
							|| (this._Klient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klient.Entity = null;
						previousValue.Zacaz.Remove(this);
					}
					this._Klient.Entity = value;
					if ((value != null))
					{
						value.Zacaz.Add(this);
						this._id_klient = value.Id;
					}
					else
					{
						this._id_klient = default(Nullable<int>);
					}
					this.SendPropertyChanged("Klient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zacaz_bluda(Zacaz_bluda entity)
		{
			this.SendPropertyChanging();
			entity.Zacaz = this;
		}
		
		private void detach_Zacaz_bluda(Zacaz_bluda entity)
		{
			this.SendPropertyChanging();
			entity.Zacaz = null;
		}
	}
}
#pragma warning restore 1591
